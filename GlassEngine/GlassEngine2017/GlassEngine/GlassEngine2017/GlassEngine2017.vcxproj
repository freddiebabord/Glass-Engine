<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGUID>{C207A328-FF1A-3F11-9BC9-A976A66203E1}</ProjectGUID>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>GlassEngine2017</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <VULKAN_SDK Condition="'$(VULKAN_SDK)'==''">$(SolutionDir)External\VulkanSDK\</VULKAN_SDK>
  </PropertyGroup>
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(SolutionDir)Builds\$(Configuration)\</OutDir>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(SolutionDir)Builds\$(Configuration)\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(SolutionDir)Builds\Intermediate\$(Configuration)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(SolutionDir)Builds\Intermediate\$(Configuration)\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">GlassEngine2017</TargetName>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">GlassEngine2017</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.exe</TargetExt>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkIncremental>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</GenerateManifest>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</GenerateManifest>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalOptions>%(AdditionalOptions)  /w34456 /std:c++latest</AdditionalOptions>
      <AdditionalIncludeDirectories>$(SolutionDir)INIH\Includes;$(SolutionDir)pugixml;$(SolutionDir)ObjLoader;$(VULKAN_SDK)\Include;$(SolutionDir)External\Include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Debug/</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>false</RuntimeTypeInfo>
      <TreatWarningAsError>false</TreatWarningAsError>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>_DEBUG;WIN32;_WINDOWS;_CRT_SECURE_NO_WARNINGS;_USE_MATH_DEFINES;VK_USE_PLATFORM_WIN32_KHR;WIN32_LEAN_AND_MEAN;CMAKE_INTDIR="Debug";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;_CRT_SECURE_NO_WARNINGS;_USE_MATH_DEFINES;VK_USE_PLATFORM_WIN32_KHR;WIN32_LEAN_AND_MEAN;CMAKE_INTDIR=\"Debug\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>
      </AdditionalIncludeDirectories>
      <Culture>0x0809</Culture>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\fredd\Documents\Temp\VulkanSamples\include;C:\Users\fredd\Documents\Temp\VulkanSamples\icd\common;C:\Users\fredd\Downloads\vulkan-cpp-library-master\vulkan-cpp-library-master\openvr\headers;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalOptions>%(AdditionalOptions)  /machine:x64</AdditionalOptions>
      <AdditionalDependencies>INIH.lib;pugixml.lib;SDL2.lib;SDL2main.lib;sfml-audio-d.lib;sfml-system-d.lib;sfml-main-d.lib;openal32.lib;flac.lib;vorbisenc.lib;vorbisfile.lib;vorbis.lib;ogg.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib;glew32.lib;opengl32.lib;vulkan-1.lib;ObjLoader.lib;glfw3dll.lib;glfw3.lib;FreeImage.lib;openvr_api.lib;shlwapi.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SolutionDir)External\Lib;$(VULKAN_SDK)\Lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <GenerateDebugInformation>Debug</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <SubSystem>Console</SubSystem>
      <Version>
      </Version>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
    <PreBuildEvent>
      <Command>
        rd /s /q "$(OutDir)Shaders\"
        rd /s /q "$(OutDir)Assets\"
      </Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
        xcopy /y /d  "$(SolutionDir)External\Dlls\*.dll" "$(OutDir)"

        cd $(ProjectDir)Shaders
        del *.spv

        call "$(ProjectDir)Shaders\compile.bat"

        xcopy /y /d  "$(ProjectDir)Shaders\*.spv" "$(OutDir)Shaders\"

        xcopy "$(ProjectDir)Assets" "$(OutDir)Assets\" /E
      </Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalOptions>%(AdditionalOptions)  /w34456 /std:c++latest</AdditionalOptions>
      <AdditionalIncludeDirectories>$(SolutionDir)INIH\Includes;$(SolutionDir)pugixml;$(SolutionDir)ObjLoader;$(VULKAN_SDK)\Include;$(SolutionDir)External\Include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Release/</AssemblerListingLocation>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <Optimization>Full</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>false</RuntimeTypeInfo>
      <TreatWarningAsError>false</TreatWarningAsError>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>_NDEBUG;WIN32;_WINDOWS;_CRT_SECURE_NO_WARNINGS;_USE_MATH_DEFINES;VK_USE_PLATFORM_WIN32_KHR;WIN32_LEAN_AND_MEAN;CMAKE_INTDIR="Release";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;_CRT_SECURE_NO_WARNINGS;_USE_MATH_DEFINES;VK_USE_PLATFORM_WIN32_KHR;WIN32_LEAN_AND_MEAN;CMAKE_INTDIR=\"Release\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>
      </AdditionalIncludeDirectories>
      <Culture>0x0809</Culture>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\fredd\Documents\Temp\VulkanSamples\include;C:\Users\fredd\Documents\Temp\VulkanSamples\icd\common;C:\Users\fredd\Downloads\vulkan-cpp-library-master\vulkan-cpp-library-master\openvr\headers;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalOptions>%(AdditionalOptions)  /machine:x64 /SUBSYSTEM:windows /ENTRY:mainCRTStartup</AdditionalOptions>
      <AdditionalDependencies>INIH.lib;pugixml.lib;SDL2.lib;SDL2main.lib;sfml-audio.lib;sfml-system.lib;sfml-main.lib;openal32.lib;flac.lib;vorbisenc.lib;vorbisfile.lib;vorbis.lib;ogg.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib;glew32.lib;opengl32.lib;vulkan-1.lib;ObjLoader.lib;glfw3dll.lib;glfw3.lib;FreeImage.lib;openvr_api.lib;shlwapi.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SolutionDir)External\Lib;$(VULKAN_SDK)\Lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <SubSystem>Windows</SubSystem>
      <Version>
      </Version>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
    <PreBuildEvent>
      <Command>
        rd /s /q "$(OutDir)Shaders\"
        rd /s /q "$(OutDir)Assets\"
      </Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
        xcopy /y /d  "$(SolutionDir)External\Dlls\*.dll" "$(OutDir)"

        cd $(ProjectDir)Shaders
        del *.spv

        call "$(ProjectDir)Shaders\compile.bat"

        xcopy /y /d  "$(ProjectDir)Shaders\*.spv" "$(OutDir)Shaders\"

        xcopy "$(ProjectDir)Assets" "$(OutDir)Assets\" /E
      </Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="resource1.h" />
    <ClInclude Include="Source\ApplicationConfiguration.h" />
    <ClInclude Include="Source\AudioManager.h" />
    <ClInclude Include="Source\FileReader.h" />
    <ClInclude Include="Source\Application.h" />
    <ClInclude Include="Source\InputDefinitions.h" />
    <ClInclude Include="Source\InputManager.h" />
    <ClInclude Include="Source\PCH\stdafx.h" />
    <ClInclude Include="Source\SceneLoader.h" />
    <ClInclude Include="Source\Utils.h" />
    <ClInclude Include="Source\VRSystem.h" />
    <ClInclude Include="Source\VulkanStructs.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="Source\ApplicationConfiguration.cpp" />
    <ClCompile Include="Source\AudioManager.cpp" />
    <ClCompile Include="Source\FileReader.cpp">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Use</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Use</PrecompiledHeader>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">PCH/stdafx.h</PrecompiledHeaderFile>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Release|x64'">PCH/stdafx.h</PrecompiledHeaderFile>
    </ClCompile>
    <ClCompile Include="Source\InputManager.cpp" />
    <ClCompile Include="Source\main.cpp">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Use</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Use</PrecompiledHeader>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">PCH/stdafx.h</PrecompiledHeaderFile>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Release|x64'">PCH/stdafx.h</PrecompiledHeaderFile>
    </ClCompile>
    <ClCompile Include="Source\Application.cpp">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Use</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Use</PrecompiledHeader>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">PCH/stdafx.h</PrecompiledHeaderFile>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Release|x64'">PCH/stdafx.h</PrecompiledHeaderFile>
    </ClCompile>
    <ClCompile Include="Source\PCH\stdafx.cpp">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="Source\SceneLoader.cpp" />
    <ClCompile Include="Source\Utils.cpp" />
    <ClCompile Include="Source\VRSystem.cpp">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Use</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Use</PrecompiledHeader>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">PCH/stdafx.h</PrecompiledHeaderFile>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Release|x64'">PCH/stdafx.h</PrecompiledHeaderFile>
    </ClCompile>
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="GlassEngine20171.rc" />
  </ItemGroup>
  <ItemGroup>
    <Image Include="Assets\GlassEngineIcon.ico" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
  <Target Name="AfterClean">
    <Delete Files="$(SolutionDir)Builds\" ContinueOnError="true" />
  </Target>
</Project>